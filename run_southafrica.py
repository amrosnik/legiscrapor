"""
Test for searching South Africa Parliament website for legal aid content.

The class legisSouthAfrica was originally generated by Selenium IDE.
However, it has been converted to a Chromedriver for ease of use,
and added lots of custom functionality.
"""

import argparse
import os
import sys
from pathlib import Path

import pandas as pd
from selenium import webdriver
from webdriver_manager.chrome import ChromeDriverManager

from legiscrapor.legissouthafrica import legisSouthAfrica

docstring = """
Extract legislation PDFs from the website for
South African Parliament.
"""

webpage_help = """
Select from:
1=Constitution
2=Mandates
3=Acts
4=Other Bills
"""


def parse_args(args):
    """Parse command line parameters

    Args:
      args ([str]): command line parameters as list of strings

    Returns:
      :obj:`argparse.Namespace`: command line parameters namespace
    """
    parser = argparse.ArgumentParser(description=docstring)
    parser.add_argument('input',help='Path to input file')

    args = parser.parse_args()
    return args


def main(args):
    """Main entry point allowing external calls

    Args:
      args ([str]): command line parameter list
    """
    args = parse_args(args)

    pd.options.display.max_colwidth = 1000
    #keywords = ['legal aid']  
    # keywords = ['legal aid',
    #           'legal assistance',
    #           'legal service',
    #           'judicial assistance']

    new_za = legisSouthAfrica()
    new_za.read_inputs(args.input)
    new_za.checkers() 

    if new_za.webpage == 1:
        scrape(new_za, new_za.keywords, 'constit')
    elif new_za.webpage == 2:
        scrape(new_za, new_za.keywords, 'mandates')
    elif new_za.webpage == 3:
        scrape(new_za, new_za.keywords, 'acts')
    elif new_za.webpage == 4:
        scrape(new_za, new_za.keywords, 'bills')
    else:
        error_msg = 'ERROR: webpage integer indicator not found.'
        raise ValueError(error_msg + webpage_help)


def scrape(new_za, keywords: list, page_type: str):
    matches = new_za.run(new_za.keywords, page_type)
    specs = 'SouthAfrica-' + page_type
    download_path = new_za.downloadPath + '/' + page_type
    if len(matches) > 0:
        print(matches)
        new_za.print_matches(matches, specs)
        new_za.delete_no_matches(specs, path=download_path,moveFiles=True)
    else:
        new_za.delete_unneeded_files('duplicates-nomatch-' + specs, [],
                                     files_path=download_path,path=new_za.downloadPath,moveNotDelete=True)

    new_za.delete_unneeded_files('duplicates-' + specs, [], path=new_za.downloadPath,moveNotDelete=True)
    new_za.teardown()


def run_full():
    main(sys.argv[1:])


if __name__ == '__main__':
    run_full()
